services:
    postgres:
        image: "postgres:latest"
        environment:
            - POSTGRES_PASSWORD=postgres_password
    redis:
        image: "redis:latest"
    api:
        build:
            context: ./server
            dockerfile: Dockerfile.dev
        volumes:
            - /app/node_modules
            - ./server:/app
        environment:
            - NODE_ENV = development
            - REDIS_HOST = redis
            - REDIS_PORT = 6379
            - PGUSER  = postgres
            - PGHOST = postgres
            - PGDATABASE = postgres
            - PGPASSWORD = postgres_password
            - PGPORT = 5432
        container_name: api
        labels:
            - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
            - "traefik.http.routers.api.entrypoints=web"
            - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"
            - "traefik.http.routers.api.middlewares=api-stripprefix"
            - "traefik.http.services.api.loadbalancer.server.port=3000"
    client:
        build:
            context: ./client
            dockerfile: Dockerfile.dev
        volumes:
            - /app/node_modules
            - ./client:/app
        environment:
            - WDS_SOCKET_PORT=0
        container_name: client
        labels:
            - "traefik.http.routers.client.rule=PathPrefix(`/`)"
            - "traefik.http.routers.client.priority=1"
            - "traefik.http.services.client.loadbalancer.server.port=80"
    worker:
        build:
            dockerfile: Dockerfile.dev
            context: ./worker
        volumes:
            - /app/node_modules
            - ./worker:/app
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
    traefik:
        container_name: traefik
        # The official v3 Traefik docker image
        image: traefik:v3.3
        # Enables the web UI and tells Traefik to listen to docker
        command: --api.insecure=true --providers.docker=true --entrypoints.web.address=:80
        ports:
            # The HTTP port
            - "80:80"
            # The Web UI (enabled by --api.insecure=true)
            - "8080:8080" # Traefik dashboard
        volumes:
            # So that Traefik can listen to the Docker events
            - "/var/run/docker.sock:/var/run/docker.sock"
