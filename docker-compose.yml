services:
    reverse-proxy:
        # The official v3 Traefik docker image
        image: traefik:v3.3
        # Enables the web UI and tells Traefik to listen to docker and show log files
        command: --api.insecure=true --providers.docker --log.level=DEBUG --entrypoints.web.address=:80
        ports:
            # The HTTP port
            - "80:80"
            # The Web UI (enabled by --api.insecure=true)
            - "8080:8080"
        volumes:
            # So that Traefik can listen to the Docker events
            - /var/run/docker.sock:/var/run/docker.sock
    client:
        build:
            context: ./client
            dockerfile: Dockerfile.dev
        volumes:
            - /app/node_modules
            - ./client:/app
        ports:
            - "3000:3000"
        environment:
            - WDS_SOCKET1_PORT=0
        labels:
            - "traefik.http.routers.client.rule=PathPrefix(`/`)"
            - "traefik.http.routers.client.entrypoints=web"
            - "traefik.http.services.client.loadbalancer.server.port=3000"
            # Make sure /api routes go to server, not client
            - "traefik.http.routers.client.priority=1"
    api:
        build:
            context: ./server
            dockerfile: Dockerfile.dev
        volumes:
            - /app/node_modules
            - ./server:/app
        ports:
            - "5000:5000"
        environment:
            - NODE_ENV=development
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - PGUSER=postgres
            - PGHOST=postgres
            - PGDATABASE=postgres
            - PGPASSWORD=postgres_password
            - PGPORT=5432
        labels:
            - "traefik.http.routers.api.rule=PathPrefix(`/api`) || PathPrefix(`/ws`)"
            - "traefik.http.routers.api.entrypoints=web"
            - "traefik.http.routers.api.priority=2"
            - "traefik.http.services.api.loadbalancer.server.port=5000"
            - "traefik.http.middlewares.strip-api.stripprefix.prefixes=/api"
            - "traefik.http.routers.api.middlewares=strip-api"
    # Add the whoami service
    postgres:
        image: "postgres:latest"
        environment:
            - POSTGRES_PASSWORD=postgres_password
    redis:
        image: "redis:latest"
        ports:
            - "6379:6379"
    worker:
        build:
            dockerfile: Dockerfile.dev
            context: ./worker
        volumes:
            - /app/node_modules
            - ./worker:/app
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379

